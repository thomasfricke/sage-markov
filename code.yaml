header: |
  /* auto generated */
  #ifndef __${type}_H__
  #define __${type}_H__
  #include <logclass.h>

  #define LC_REACTIVITY(c) (reactivity((c)-cells))
reactants: |
      /*
       *  definition of the model
       *
       */
      typedef struct CELL{
        LC_DERIVED;

        ${reactants}
      } cell;
molecule: "unsigned long ${name};\n  "
reaction:
  reactivity: |
    inline  lc_reactivity_t reaction_reactivity_${name}(const cell* source){
        return ${rate} * ${educts};
    }
  step: |
    inline void reaction_step_${name}(cell * source){
        ${changes}
    }
  rate: "reaction_rate_${name}"
source: "source -> "
diffusion:
  topology: "#include <${topology}.h>\n"
  reactivity: |

    inline lc_reactivity_t diffusion_reactivity_${molecule}(const cell* source){
        return diffusion_rate_${molecule} * source->${molecule};
    }
  step: |
    inline cell * diffusion_step_${molecule}(cell * source){
      source->${molecule}--;

      cell *dest = random_neighbour(source);
      dest->${molecule}++;

      return dest;
    }
  rate: "diffusion_rate_${name}"
declaration: "lc_reactivity_t ${name} = ${rate};\n"
reactivity: |

  inline lc_reactivity_t reactivity(size_t index) {
    return ${reactivity};
  }
