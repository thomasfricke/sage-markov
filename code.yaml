header: |
  /* auto generated */
  #ifndef __${type}_H__
  #define __${type}_H__
  #include <logclass.h>

  #define LC_REACTIVITY(c) (reactivity((c)-cells))
reactants: |
      /*
       *  definition of the model
       *
       */
      typedef struct CELL{
        LC_DERIVED;

        ${reactants}
      } cell;
molecule: "unsigned long ${name};\n  "
todo: |
  #import <topology.h>

  extern lc_reactivity_t decay_rate, diffusion_rate;

  inline  lc_reactivity_t reaction_reactivity(const cell* source){
      return decay_rate * source-> n ;
  }

  inline lc_reactivity_t diffusion_reactivity(const cell* source){
      return diffusion_rate * source->n;
  }



  inline lc_reactivity_t reactivity(size_t index) {
    return (decay_rate+diffusion_rate)* ( cells+index ) -> n;
  }


  inline void reaction_step(cell * source){
      source -> n--;
  }

  inline cell * diffusion_step(cell * source){
      source->n--;

      cell *dest = random_neighbour(source);
      dest->n++;

      return dest;
     }
  #endifs
  """
